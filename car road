from OpenGL.GL import *
from OpenGL.GLU import *
from OpenGL.GLUT import *


def draw_XYZ():
    glBegin(GL_LINES)
    glColor3f(1, 0, 0)
    glVertex(0, 0, 0)
    glVertex(10, 0, 0)

    glColor3f(0, 1, 0)
    glVertex(0, 0, 0)
    glVertex(0, 10, 0)

    glColor3f(0, 0, 1)
    glVertex(0, 0, 0)
    glVertex(0, 0, 10)
    glEnd()


def myInit():
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluPerspective(60, 1, 1, 100)
    gluLookAt(8, 9, 10,
              0, 0, 0,
              0, 1, 0)

    glClearColor(1, 1, 1, 1)


angle = 0
x = 0
forward = True


def draw():
    global angle
    global x
    global forward

    glMatrixMode(GL_MODELVIEW)
    glLoadIdentity()
    glClear(GL_COLOR_BUFFER_BIT)

    # draw_XYZ()

    glBegin(GL_POLYGON)
    glColor(0,0,0)
    glVertex3d(100,0,-5)
    glVertex3d(100, 0, 5)
    glVertex3d(-100,0,5)
    glVertex3d(-100,0,-5)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(10, 0, -1)
    glVertex(10, 0, 0)
    glVertex(5, 0, 0)
    glVertex(5, 0, -1)
    glEnd()


    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(10, 0, 2)
    glVertex(10, 0, 1)
    glVertex(5, 0, 1)
    glVertex(5, 0, 2)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(3, 0, -1)
    glVertex(3, 0, 0)
    glVertex(-4, 0, 0)
    glVertex(-4, 0, -1)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(3, 0, 2)
    glVertex(3, 0, 1)
    glVertex(-4, 0,1)
    glVertex(-4, 0, 2)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(-7, 0, -1)
    glVertex(-7, 0, 0)
    glVertex(-18, 0, 0)
    glVertex(-18, 0, -1)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(1, 1, 1)
    glVertex(-7, 0, 1)
    glVertex(-7, 0, 2)
    glVertex(-18, 0, 2)
    glVertex(-18, 0, 1)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(.3, .7, 0)
    glVertex(10, 0, 5)
    glVertex(10, 0, 12)
    glVertex(-20, 0, 12)
    glVertex(-20, 0, 5)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(.3, .7, 0)
    glVertex(10, 0, -5)
    glVertex(10, 0, -20)
    glVertex(-100, 0, -20)
    glVertex(-100, 0, -5)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(.4, .9, 0.9)
    glVertex(5, 0, -20)
    glVertex(5, 0, -100)
    glVertex(-100, 0, -100)
    glVertex(-100, 0, -20)
    glEnd()

    glBegin(GL_POLYGON)
    glColor3f(.3, 0.1, 0)
    glVertex(3.5, 0, -6)
    glVertex(3.5, 3, -6)
    glVertex(3, 3, -6)
    glVertex(3, 0, -6)
    glEnd()

    glLoadIdentity()
    glColor3f(0.1, 0.6, 0)
    glTranslate(3.25, 4.3, -6)
    glutSolidSphere(1.5, 6, 10)

    glBegin(GL_POLYGON)
    glColor3f(.3, 0.1, 0)
    glVertex(-10.2, -6, -3)
    glVertex(-10.2, -2, -3)
    glVertex(-9.5, -2, -3)
    glVertex(-9.5 ,-6, -3)
    glEnd()

    glLoadIdentity()
    glColor3f(0.1, 0.6, 0)
    glTranslate(-1.7, 5.3, -3)
    glutSolidSphere(1.3, 6, 10)

    glBegin(GL_POLYGON)
    glColor3f(.3, 0.1, 0)
    glVertex(-16, -6, -5)
    glVertex(-16, -2, -5)
    glVertex(-15, -2, -5)
    glVertex(-15, -6, -5)
    glEnd()

    glLoadIdentity()
    glColor3f(0.1, 0.6, 0)
    glTranslate(-13.7, 4.5, -6)
    glutSolidSphere(1.6, 6, 10)

    glColor3f(1, 1, 0)
    glLoadIdentity()
    glTranslate(5, 8,0 )
    glutSolidSphere(.5,100,100)

    glLoadIdentity()
    glColor3f(0.6, 0.4, 0.5)
    glTranslate(x, 0, 0)
    glScale(1, 0.25, 0.5)
    glutSolidCube(5)

    glLoadIdentity()
    glColor3f(0.8, 0.4, 0.4)
    glTranslate(x, 5*0.25, 0)
    glScale(0.5, 0.25, 0.5)
    glutSolidCube(5)

    glLoadIdentity()
    glColor3f(0, 0, 1)
    glTranslate(x+0.5*5, -0.5 * 0.25*5, 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.2, 0.5, 10, 10)

    glLoadIdentity()
    glTranslate(x+0.5*5, -0.5 * 0.25*5, - 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.2, 0.5, 10, 10)

    '''glLoadIdentity()
    glTranslate(x-0.5*5, -0.5 * 0.25*5, -0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutWireTorus(0.2, 0.5, 10, 10)'''

    glLoadIdentity()
    glTranslate(x-0.5*5, -0.5 * 0.25*5, 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.2, 0.5, 10, 10)

    glColor3f(1, 1, 0)
    glLoadIdentity()
    glTranslate(2.5 + x, -.2 * .25, 1 * .5)
    glutSolidSphere(0.25, 10, 10)

    glLoadIdentity()
    glTranslate(2.5 + x, -.2 * .25, -1 * .5)
    glutSolidSphere(0.25, 10, 10)


    glutSwapBuffers()

    if forward:
        angle -= 0.2
        x += 0.02
        if x > 5:
            forward = False
    else:
        angle += 0.2
        x -= 0.02
        if x < -5:
            forward = True



glutInit()
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
glutInitWindowSize(600, 600)
glutCreateWindow(b"Moving Car")
myInit()
glutDisplayFunc(draw)
glutIdleFunc(draw)
glutMainLoop()
